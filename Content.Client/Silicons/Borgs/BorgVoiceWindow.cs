using System.Linq;
using Content.Shared._Sunrise.TTS;
using Content.Shared.Humanoid;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Localization;
using Robust.Shared.Prototypes;

namespace Content.Client.Silicons.Borgs;

[GenerateTypedNameReferences]
public sealed partial class BorgVoiceWindow : DefaultWindow
{
    [Dependency] private readonly IPrototypeManager _prototypeManager = default!;

    public event Action<string>? OnVoiceSelected;
    public event Action<string>? OnVoicePreview;

    private readonly List<TTSVoicePrototype> _voiceList = new();

    public BorgVoiceWindow()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        Title = Loc.GetString("borg-voice-window-title");

        LoadVoiceList();
        SetupButtons();
    }

    private void LoadVoiceList()
    {
        _voiceList.Clear();
        _voiceList.AddRange(_prototypeManager
            .EnumeratePrototypes<TTSVoicePrototype>()
            .Where(v => v.RoundStart)
            .OrderBy(v => Loc.GetString(v.Name)));
    }

    private void SetupButtons()
    {
        VoiceOptionButton.OnItemSelected += args =>
        {
            VoiceOptionButton.SelectId(args.Id);
            var voice = _voiceList[args.Id];
            OnVoiceSelected?.Invoke(voice.ID);
        };

        VoicePlayButton.OnPressed += _ =>
        {
            if (VoiceOptionButton.SelectedId != null)
            {
                var voice = _voiceList[VoiceOptionButton.SelectedId];
                OnVoicePreview?.Invoke(voice.ID);
            }
        };
    }

    public void UpdateState(BorgVoiceChangeState state)
    {
        VoiceOptionButton.Clear();

        var selectedIndex = 0;
        for (var i = 0; i < _voiceList.Count; i++)
        {
            var voice = _voiceList[i];
            var name = Loc.GetString(voice.Name);

            VoiceOptionButton.AddItem(name, i);

            if (voice.ID == state.CurrentVoiceId)
            {
                selectedIndex = i;
            }
        }

        if (_voiceList.Count > 0)
        {
            VoiceOptionButton.SelectId(selectedIndex);
        }
    }
}
